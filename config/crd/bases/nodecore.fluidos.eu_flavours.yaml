---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: flavours.nodecore.fluidos.eu
spec:
  group: nodecore.fluidos.eu
  names:
    kind: Flavour
    listKind: FlavourList
    plural: flavours
    singular: flavour
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Flavour is the Schema for the flavours API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: FlavourSpec defines the desired state of Flavour
            properties:
              characteristics:
                description: Characteristics contains the characteristics of the Flavour.
                  They are based on the type of the Flavour and can change depending
                  on it. In this case, the type is K8S so the characteristics are
                  CPU, Memory, GPU and EphemeralStorage.
                properties:
                  cpu:
                    anyOf:
                    - type: integer
                    - type: string
                    description: CPU is the number of CPU cores of the Flavour.
                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                    x-kubernetes-int-or-string: true
                  ephemeral-storage:
                    anyOf:
                    - type: integer
                    - type: string
                    description: EphemeralStorage is the amount of ephemeral storage
                      of the Flavour.
                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                    x-kubernetes-int-or-string: true
                  gpu:
                    anyOf:
                    - type: integer
                    - type: string
                    description: GPU is the number of GPU cores of the Flavour.
                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                    x-kubernetes-int-or-string: true
                  memory:
                    anyOf:
                    - type: integer
                    - type: string
                    description: Memory is the amount of RAM of the Flavour.
                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                    x-kubernetes-int-or-string: true
                  persistent-storage:
                    anyOf:
                    - type: integer
                    - type: string
                    description: PersistentStorage is the amount of persistent storage
                      of the Flavour.
                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                    x-kubernetes-int-or-string: true
                required:
                - cpu
                - memory
                type: object
              optionalFields:
                description: This field is used to specify the optional fields that
                  can be retrieved from the Flavour. In the future it will be expanded
                  to include more optional fields defined in the REAR Protocol or
                  custom ones.
                properties:
                  availability:
                    description: Availability is the availability flag of the Flavour.
                      It is a field inherited from the REAR Protocol specifications.
                    type: boolean
                type: object
              owner:
                description: Owner contains the identity info of the owner of the
                  Flavour. It can be unknown if the Flavour is provided by a reseller
                  or a third party.
                properties:
                  domain:
                    type: string
                  ip:
                    type: string
                  nodeID:
                    type: string
                required:
                - domain
                - ip
                - nodeID
                type: object
              policy:
                description: Policy contains the policy of the Flavour. The policy
                  describes the partitioning and aggregation properties of the Flavour.
                properties:
                  aggregatable:
                    description: Aggregatable contains the aggregation properties
                      of the Flavour.
                    properties:
                      maxCount:
                        description: MaxCount is the maximum requirable number of
                          instances of the Flavour.
                        type: integer
                      minCount:
                        description: MinCount is the minimum requirable number of
                          instances of the Flavour.
                        type: integer
                    required:
                    - maxCount
                    - minCount
                    type: object
                  partitionable:
                    description: Partitionable contains the partitioning properties
                      of the Flavour.
                    properties:
                      cpuMin:
                        description: CpuMin is the minimum requirable number of CPU
                          cores of the Flavour.
                        type: integer
                      cpuStep:
                        description: CpuStep is the incremental value of CPU cores
                          of the Flavour.
                        type: integer
                      memoryMin:
                        description: MemoryMin is the minimum requirable amount of
                          RAM of the Flavour.
                        type: integer
                      memoryStep:
                        description: MemoryStep is the incremental value of RAM of
                          the Flavour.
                        type: integer
                    required:
                    - cpuMin
                    - cpuStep
                    - memoryMin
                    - memoryStep
                    type: object
                type: object
              price:
                description: Price contains the price model of the Flavour.
                properties:
                  amount:
                    description: Amount is the amount of the price.
                    type: string
                  currency:
                    description: Currency is the currency of the price.
                    type: string
                  period:
                    description: Period is the period of the price.
                    type: string
                required:
                - amount
                - currency
                - period
                type: object
              providerID:
                description: ProviderID is the ID of the FLUIDOS Node ID that provides
                  this Flavour. It can correspond to ID of the owner FLUIDOS Node
                  or to the ID of a FLUIDOS SuperNode that represents the entry point
                  to a FLUIDOS Domain
                type: string
              type:
                description: Type is the type of the Flavour. Currently, only K8S
                  is supported.
                type: string
            required:
            - characteristics
            - optionalFields
            - owner
            - policy
            - price
            - providerID
            - type
            type: object
          status:
            description: FlavourStatus defines the observed state of Flavour
            properties:
              creationTime:
                description: This field represents the creation time of the Flavour.
                type: string
              expirationTime:
                description: This field represents the expiration time of the Flavour.
                  It is used to determine when the Flavour is no longer valid.
                type: string
              lastUpdateTime:
                description: This field represents the last update time of the Flavour.
                type: string
            required:
            - creationTime
            - expirationTime
            - lastUpdateTime
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
